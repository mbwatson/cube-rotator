{"version":3,"sources":["utils/index.js","components/icons/undo-icon.js","components/controls/buttons.js","components/controls/controls.js","components/cube/face.js","components/cube/cube.js","components/word/word.js","components/layout/header.js","components/layout/main.js","components/layout/footer.js","components/axis-key/axis-key.js","App.js","serviceWorker.js","index.js"],"names":["texify","string","UndoIcon","size","fill","width","height","viewBox","d","defaultProps","Button","styled","button","ActionButton","ResetButton","ButtonGroup","div","Wrapper","ControlPanel","children","xRotationHandler","yRotationHandler","zRotationHandler","resetHandler","onClick","math","Face","props","color","transform","Scene","sideLength","Rotator","animated","Cube","xAnimation","yAnimation","zAnimation","style","Word","word","Header","header","Main","main","Footer","footer","AxisKey","id","markerWidth","markerHeight","refX","refY","cx","cy","r","orient","x1","y1","x2","y2","stroke","strokeWidth","markerStart","markerEnd","x","y","textAnchor","fontSize","App","useState","xRotation","setXRotation","yRotation","setYRotation","zRotation","setZRotation","setWord","animationConfig","mass","tension","friction","useSpring","config","value","event","newChar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09bb17cd.chunk.js","sourcesContent":["export const texify = string => '$$' + string + '$$'\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const UndoIcon = ({ size, fill }) => (\n    <svg width={ size } height={ size } fill={ fill } viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"/>\n    </svg>\n)\n\nUndoIcon.propTypes = {\n    size: PropTypes.number.isRequired,\n    fill: PropTypes.string.isRequired,\n}\n\nUndoIcon.defaultProps = {\n    size: 20,\n    fill: '#eee',\n}","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    background-color: coral;\n    cursor: pointer;\n    padding: 0;\n    font-style: italic;\n    margin: 0;\n    font-weight: bold;\n    color: #000;\n    border: 1px solid #00000033;\n    transition: filter 250ms;\n    &:hover {\n        filter: brightness(0.8);\n    }\n`\n\nexport const ActionButton = styled(Button)`\n    padding: 0 1rem;\n`\n\nexport const ResetButton = styled(Button)`\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background-color: transparent;\n    border: 0;\n    transition: filter 250ms;\n    &:hover {\n        filter: brightness(0.8);\n    }\n`\n\nexport const ButtonGroup = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0.5rem;\n    & ${ Button } {\n        height: 100%;\n        width: 100%;\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport MathJax from 'react-mathjax-preview'\nimport { texify } from '../../utils'\nimport { UndoIcon } from '../icons'\nimport { ButtonGroup, ActionButton, ResetButton } from './buttons'\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: stretch;\n    padding: 1rem;\n`\n\nexport const ControlPanel = ({ children, xRotationHandler, yRotationHandler, zRotationHandler, resetHandler }) => {\n    return (\n        <Wrapper>\n            <ButtonGroup>\n                <ActionButton onClick={ xRotationHandler(1) }><MathJax math={ texify('x') } /></ActionButton>\n                <ActionButton onClick={ xRotationHandler(-1) }><MathJax math={ texify('x^-') } /></ActionButton>\n            </ButtonGroup>\n            <ButtonGroup>\n                <ActionButton onClick={ yRotationHandler(1) }><MathJax math={ texify('y') } /></ActionButton>\n                <ActionButton onClick={ yRotationHandler(-1) }><MathJax math={ texify('y^-') } /></ActionButton>\n            </ButtonGroup>\n            <ButtonGroup>\n                <ActionButton onClick={ zRotationHandler(1) }><MathJax math={ texify('z') } /></ActionButton>\n                <ActionButton onClick={ zRotationHandler(-1) }><MathJax math={ texify('z^-') } /></ActionButton>\n            </ButtonGroup>\n            <ResetButton onClick={ resetHandler }><UndoIcon size=\"32\" fill=\"coral\"/></ResetButton>\n        </Wrapper>\n    )\n}","import styled from 'styled-components'\n\nexport const Face = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-color: ${ props => props.color ? props.color : 'coral' };\n    border: 2px solid #333;\n    opacity: 0.75;\n    transform-origin: 50% 50%;\n    transform: translateZ(100px) ${ props => props.transform || 'none' };\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    color: #333;\n    font-weight: bold;\n    font-size: 32pt;\n`\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport { Face } from './face'\n\nexport const Scene = styled.div`\n    position: relative;\n    height: ${ props => props.sideLength };\n    width: ${ props => props.sideLength };\n    border: 1px solid #555;\n    perspective: 1000px;\n`\n\nconst Rotator = styled(animated.div)`\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    transform-style: preserve-3d;\n`\n\nexport const Cube = ({ sideLength, xAnimation, yAnimation, zAnimation }) => {\n    return (\n        <Scene sideLength={ sideLength }>\n            <Rotator style={ zAnimation }>\n                <Rotator style={ yAnimation }>\n                    <Rotator style={ xAnimation }>\n                        <Face color=\"white\" style={{ transform: `rotateY(0deg) translateZ(calc(${ sideLength } / 2))` }}>FRONT</Face>\n                        <Face color=\"peachpuff\" style={{ transform: `rotateY(-90deg) translateZ(calc(${ sideLength } / 2))` }}>RIGHT</Face>\n                        <Face color=\"salmon\" style={{ transform: `rotateY(90deg) translateZ(calc(${ sideLength } / 2))` }}>LEFT</Face>\n                        <Face color=\"darkcyan\" style={{ transform: `rotateY(180deg) translateZ(calc(${ sideLength } / 2))` }}>BACK</Face>\n                        <Face color=\"powderblue\" style={{ transform: `rotateX(90deg) translateZ(calc(${ sideLength } / 2))` }}>TOP</Face>\n                        <Face color=\"olive\" style={{ transform: `rotateX(-90deg) translateZ(calc(${ sideLength } / 2))` }}>BOTTOM</Face>\n                    </Rotator>\n                </Rotator>\n            </Rotator>\n        </Scene>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax-preview'\nimport { texify } from '../../utils'\n\nexport const Word = ({ word }) => <MathJax math={ texify(`w = ${ word || '1' }`) } />\n","import styled from 'styled-components'\n\nexport const Header = styled.header`\n    background-color: transparent;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\n","import styled from 'styled-components'\n\nexport const Main = styled.main`\n    background-color: inherit;\n    color: inherit;\n    flex: 1;\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\n","import styled from 'styled-components'\n\nexport const Footer = styled.footer`\n    background-color: #111;\n    color: #ccc;\n    padding: 2rem 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    min-height: 8rem;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    position: fixed;\n    left: 1rem;\n    top: 1rem;\n`\n\nexport const AxisKey = ({ size = '200px', fill = '#333' }) => (\n    <Wrapper>\n        <svg width={ size } height={ size } fill={ fill } viewBox=\"0 0 40 20\">\n            <defs>\n                <marker id=\"dot\" markerWidth=\"8\" markerHeight=\"8\" refX=\"5\" refY=\"5\">\n                    <circle cx=\"5\" cy=\"5\" r=\"3\" fill=\"#eee\" />\n                </marker>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"#eee\" />\n                </marker>\n            </defs>\n            <g transform=\"translate(20,0)\">\n                <line x1=\"0\" y1=\"0\" x2=\"20\" y2=\"0\" stroke=\"#eee\" style={{ strokeWidth: '0.2' }} markerStart=\"url(#dot)\" markerEnd=\"url(#arrow)\" />\n                <text x=\"18\" y=\"3\" textAnchor=\"middle\" fill=\"#eee\" fontSize=\"3\">x</text>\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"18\" stroke=\"#eee\" style={{ strokeWidth: '0.2' }} markerEnd=\"url(#arrow)\" />\n                <text x=\"-2\" y=\"20\" textAnchor=\"middle\" fill=\"#eee\" fontSize=\"3\">y</text>\n                <line x1=\"0\" y1=\"0\" x2=\"-9\" y2=\"12\" stroke=\"#eee\" style={{ strokeWidth: '0.2' }} markerEnd=\"url(#arrow)\" />\n                <text x=\"-10\" y=\"9\" textAnchor=\"middle\" fill=\"#eee\" fontSize=\"3\">z</text>\n            </g>\n        </svg>\n    </Wrapper>\n)","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useSpring } from 'react-spring'\nimport { ControlPanel } from './components/controls'\nimport { Cube } from './components/cube'\nimport { Word } from './components/word'\nimport { Header, Main, Footer } from './components/layout'\nimport { AxisKey } from './components/axis-key'\nconst SIDE_LENGTH = '300px'\n\nconst Wrapper = styled.div`\n    // border: 1px solid #f99; & * { border: 1px solid #f99; }\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: linear-gradient(30deg, steelblue, darkslategray);\n`\n\nconst App = () => {\n    const [xRotation, setXRotation] = useState(0)\n    const [yRotation, setYRotation] = useState(0)\n    const [zRotation, setZRotation] = useState(0)\n    const [word, setWord] = useState('')\n    const animationConfig = { mass: 1, tension: 200, friction: 20, }\n\n    const xAnimation = useSpring({\n        transform: `\n            rotateX(${ xRotation }deg)\n        `,\n        config: animationConfig,\n    })\n    \n    const yAnimation = useSpring({\n        transform: `\n            rotateY(${ yRotation }deg)\n        `,\n        config: animationConfig,\n    })\n    \n    const zAnimation = useSpring({\n        transform: `\n            rotateZ(${ zRotation }deg)\n        `,\n        config: animationConfig,\n    })\n    \n    const handleXRotate = value => event => {\n        setXRotation(xRotation => xRotation - value * 90)\n        const newChar = value === 1 ? 'x' : 'x^-'\n        setWord(word => word + newChar)\n    }\n\n    const handleYRotate = value => event => {\n        setYRotation(yRotation => yRotation - value * 90)\n        const newChar = value === 1 ? 'y' : 'y^-'\n        setWord(word => word + newChar)\n    }\n\n    const handleZRotate = value => event => {\n        setZRotation(zRotation => zRotation - value * 90)\n        const newChar = value === 1 ? 'z' : 'z^-'\n        setWord(word => word + newChar)\n    }\n\n    const handleResetRotation= () => {\n        setXRotation(0)\n        setYRotation(0)\n        setZRotation(0)\n        setWord('')\n    }\n\n    return (\n        <Wrapper>\n            \n            <Header>\n                <AxisKey />\n                \n                <ControlPanel\n                    xRotationHandler={ handleXRotate }\n                    yRotationHandler={ handleYRotate }\n                    zRotationHandler={ handleZRotate }\n                    resetHandler={ handleResetRotation}\n                />\n            </Header>\n\n            <Main>\n                <Cube\n                    sideLength={ SIDE_LENGTH }\n                    xAnimation={ xAnimation }\n                    yAnimation={ yAnimation }\n                    zAnimation={ zAnimation }\n                />\n            </Main>\n            \n            <Footer>\n                <Word word={ word } />\n            </Footer>\n\n        </Wrapper>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}